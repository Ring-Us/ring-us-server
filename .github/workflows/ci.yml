name: CI Workflow

on:
  pull_request:
    branches:
      - main
      - develop
      - feature/*

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # 1. 리포지토리 체크아웃
      - name: Check out repository
        uses: actions/checkout@v3

      # 2. JDK 23 설정
      - name: Set up JDK 23
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '23'

      # 3. Gradle 캐시 적용
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # 4. 환경 변수 설정
      - name: Set up environment variables
        run: |
          echo "SPRING_PORT=${{ secrets.SPRING_PORT }}" >> $GITHUB_ENV
          echo "BASE_PATH=${{ secrets.BASE_PATH }}" >> $GITHUB_ENV
          echo "ENV_FILE=${{ secrets.ENV_FILE }}" >> $GITHUB_ENV
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> $GITHUB_ENV
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> $GITHUB_ENV
          echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> $GITHUB_ENV
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> $GITHUB_ENV
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> $GITHUB_ENV
          echo "DB_URL=${{ secrets.DB_URL }}" >> $GITHUB_ENV
          echo "REDIS_HOST=${{ secrets.REDIS_HOST }}" >> $GITHUB_ENV
          echo "REDIS_PORT=${{ secrets.REDIS_PORT }}" >> $GITHUB_ENV
          echo "REDIS_DATABASE=${{ secrets.REDIS_DATABASE }}" >> $GITHUB_ENV
          echo "REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}" >> $GITHUB_ENV
          echo "SMTP_HOST=${{ secrets.SMTP_HOST }}" >> $GITHUB_ENV
          echo "SMTP_PORT=${{ secrets.SMTP_PORT }}" >> $GITHUB_ENV
          echo "SMTP_USERNAME=${{ secrets.SMTP_USERNAME }}" >> $GITHUB_ENV
          echo "SMTP_PASSWORD=${{ secrets.SMTP_PASSWORD }}" >> $GITHUB_ENV
          echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> $GITHUB_ENV
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
          echo "AWS_BUCKET_NAME=${{ secrets.AWS_BUCKET_NAME }}" >> $GITHUB_ENV
          echo "MAX_FAILED_ATTEMPTS=${{ secrets.MAX_FAILED_ATTEMPTS }}" >> $GITHUB_ENV
          echo "DEFAULT_EXPIRY=${{ secrets.DEFAULT_EXPIRY }}" >> $GITHUB_ENV

      # 5. Gradle 빌드 및 테스트 실행
      - name: Build and test with Gradle
        run: ./gradlew clean build --no-daemon
